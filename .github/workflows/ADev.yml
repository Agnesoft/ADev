name: ADev

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  formatting:
    name: Code Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Formatting
        run: |
          ./build.sh install-clang-format
          ./build.sh formatting

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Code Coverage
        run: |
          ./build.sh install-ninja
          ./build.sh install-clang
          ./build.sh install-llvm
          ./build.sh coverage
      - name: Archive
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: adev-code-coverage
          path: build_clang_Coverage/coverage

  analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Analysis
        run: |
          ./build.sh install-ninja
          ./build.sh install-clang-tidy
          ./build.sh analysis

  documentation:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Documentation
        run: |
          ./build.sh install-doxygen
          ./build.sh documentation
      - name: Archive
        uses: actions/upload-artifact@v1
        with:
          name: adev-docs
          path: docs/html

  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "Windows MSVC x64",
              os: windows-latest,
              platform: windows-msvc2019-x64,
            }
          - {
              name: "Linux GCC x64",
              os: ubuntu-latest,
              platform: linux-gcc9-x64,
            }
          - {
              name: "macOS Clang x64",
              os: macos-latest,
              platform: macOS-clang9-x64,
            }
    steps:
      - uses: actions/checkout@v2
      - name: Build
        shell: bash
        run: |
          export BUILD_DIR=build
          ./build.sh install-ninja
          ./build.sh build
      - name: Test
        shell: bash
        run: |
          export BUILD_DIR=build
          export TEST_REPEAT=100
          ./build.sh tests
      - name: Archive
        uses: actions/upload-artifact@v1
        with:
          name: adev-${{ matrix.config.platform }}
          path: build/bin/
